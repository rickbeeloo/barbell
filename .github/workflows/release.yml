name: Cross-Platform Build

permissions:
  contents: write  

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      RUSTFLAGS: "-C target-cpu=native"
      PYO3_USE_ABI3_FORWARD_COMPATIBILITY: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --release --workspace --verbose

      - name: Run tests
        run: cargo test --workspace --verbose

      - name: Prepare artifact (Linux)
        if: runner.os == 'Linux'
        run: |
          mkdir -p artifacts
          find target/release -maxdepth 1 -type f -executable -exec cp {} artifacts/ \;

      - name: Prepare artifact (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p artifacts
          find target/release -maxdepth 1 -type f -perm +111 ! -name "*.d" ! -name "*.rlib" -exec cp {} artifacts/ \;

      - name: Prepare artifact (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifacts
          Copy-Item target/release/*.exe artifacts/ -ErrorAction SilentlyContinue

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: artifacts

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref_name, 'v') 
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release_artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
